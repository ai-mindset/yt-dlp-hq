name: Compile and release 

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: CI on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    permissions:
      contents: write
    
    steps:
    - name: Action for checking out a repo 
      uses: actions/checkout@v4
      id: tag_version

    - name: GitHub Tag action
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Deno 
      uses: denoland/setup-deno@v1
      with:
        deno-version: rc 

    - name: Download yt-dlp_linux with curl
      run: | 
        curl -O https://github.com/yt-dlp/yt-dlp/releases/download/2024.09.27/yt-dlp_linux
        echo "$(ls)"

    - name: Test yt-dlp
      run: | 
        chmod u+x yt-dlp_linux && ./yt-dlp_linux --version

    - name: Install FFmpeg on Ubuntu
      run: | 
        sudo add-apt-repository universe && sudo apt update && sudo apt install ffmpeg

    - name: Test FFmpeg
      run: ffmpeg -version

    - name: Build step
      run: deno task build
      
    - name: Move exe to release/ 
      run: |
        mkdir -p release
        echo "Move executables to release/ "
        mv yt-dlp-hq-arm-linux yt-dlp-hq-arm-mac yt-dlp-hq.exe yt-dlp-hq-intel-linux yt-dlp-hq-intel-mac release/ || true
        echo "List release/: $(ls -R release/)"

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/* 
        tag: ${{ steps.tag_version.outputs.new_tag }} # ${{ matrix.os }}-${{ github.run_id }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        overwrite: true
        file_glob: true
