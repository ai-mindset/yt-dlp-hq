name: Compile and release 

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: CI on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    permissions:
      contents: write
    
    steps:
    - name: Action for checking out a repo 
      uses: actions/checkout@v4

    - name: Set up Deno 
      uses: denoland/setup-deno@v1
      with:
        deno-version: rc 

    - name: Download yt-dlp_linux with curl
      run: | 
        curl -O https://github.com/yt-dlp/yt-dlp/releases/download/2024.09.27/yt-dlp_linux
        echo "$(ls)"

    - name: Test yt-dlp
      run: | 
        chmod u+x yt-dlp_linux 
        ./yt-dlp_linux --version

    - name: Install FFmpeg on Ubuntu
      run: | 
        sudo add-apt-repository universe 
        sudo apt update 
        sudo apt install ffmpeg

    - name: Test FFmpeg
      run: ffmpeg -version

    - name: Build step
      run: |
        mkdir -p release
        deno task build
        echo "Compress executables to .tar"
        for file in release/*; do
          if [ -x "$file" ]; then
            tar -cvf "${file}.tar" "$file"
            echo "Compressed $file to ${file}.tar"
          fi
        done
        echo "Check if release/ is empty"
        if ls release/*.tar >/dev/null 2>&1; then
          echo "release_empty=false" >> $GITHUB_ENV
          echo "Executables generated"
          echo "List release/: $(ls -R release/)"
        else
          echo "No files found in release/"
          echo "release_empty=true" >> $GITHUB_ENV
        fi

    - name: Upload binaries to release
      if: env.release_empty == 'false'
      uses: svenstaro/upload-release-action@v2
      with:
        # repo_token: ${{ secrets.YT_DLP_HQ}}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/*.tar 
        tag: ${{ github.run_id }}  # ${{ matrix.os }}-${{ github.run_id }}
        overwrite: true
        file_glob: true
